<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Extensions.bbvEventBroker</name>
    </assembly>
    <members>
        <member name="T:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods">
            <summary>
            Extension methods for registering objects on the event broker.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods.RegisterOnEventBroker``1(Ninject.Syntax.IBindingOnSyntax{``0},System.String)">
            <summary>
            Defines that the object created by the binding shall be registered on the specified event broker.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The syntax.</param>
            <param name="eventBrokerName">Name of the event broker.</param>
            <returns>The syntax</returns>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods.RegisterOnGlobalEventBroker``1(Ninject.Syntax.IBindingOnSyntax{``0})">
            <summary>
            Defines that the object created by the binding shall be registered on the default global event broker.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The syntax.</param>
            <returns>The syntax</returns>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods.AddGlobalEventBroker(Ninject.Syntax.IBindingRoot,System.String)">
            <summary>
            Adds a global event broker to the kernel.
            </summary>
            <param name="bindingRoot">The binding root.</param>
            <param name="eventBrokerName">Name of the event broker.</param>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods.OwnsEventBroker``1(Ninject.Syntax.IBindingOnSyntax{``0},System.String)">
            <summary>
            Defines that the object created by a binding owns an event broker.
            Object created in the object tree below this binding can use this event broker.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The syntax.</param>
            <param name="eventBrokerName">Name of the event broker.</param>
            <returns>The syntax</returns>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerExtensionMethods.WhenTargetNamed``1(Ninject.Syntax.IBindingWhenSyntax{``0},System.String)">
            <summary>
            Condition that matches when the target has the given name.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The syntax.</param>
            <param name="name">The name.</param>
            <returns>The syntax to define more things for the binding.</returns>
        </member>
        <member name="T:Ninject.Extensions.bbvEventBroker.EventBrokerModule">
            <summary>
            Module for the event broker extension.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.bbvEventBroker.EventBrokerModule.DefaultGlobalEventBrokerName">
            <summary>
            The name of the default global event brokerl
            </summary>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.bbvEventBroker.EventBrokerModule.VerifyRequiredModulesAreLoaded">
            <summary>
            Called after loading the modules. A module can verify here if all other required modules are loaded.
            </summary>
        </member>
    </members>
</doc>
